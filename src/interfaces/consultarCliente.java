/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.clientes;
import utilidades.constantes;

/**
 *
 * @author CEC
 */
public class consultarCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form consultarCliente
     */
    public consultarCliente() {
        initComponents();
        this.tblCleintes.setModel(this.confTabla());
    }

    /**
     * @param @return DefaultTableModel
     */
    //  private DefaultTableModel modeloTabla = new DefaultTableModel();
    private DefaultTableModel confTabla() {
        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.setColumnCount(0);
        modeloTabla.addColumn("IDENTIFICACION");
        modeloTabla.addColumn("NOMBRE");
        modeloTabla.addColumn("APELLIDO");
        modeloTabla.addColumn("TELEFONO");
        modeloTabla.addColumn("CORREO");
        return modeloTabla;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdentificaionCliente = new javax.swing.JTextField();
        txtNombreCliente = new javax.swing.JTextField();
        txtApellidoCliente1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCleintes = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("CONSULTA DE CLEINTES");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Identificacion:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Apellido:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdentificaionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdentificaionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtApellidoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblCleintes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCleintes);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(btnBuscar)
                        .addGap(38, 38, 38)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnSalir))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        clientes instCleinte = new clientes();
        String parametroBuqueda = this.buscarParametro();
        DefaultTableModel modeloTabla = this.confTabla();
        ResultSet rs = null;
        if (!parametroBuqueda.isEmpty()) {
            switch (parametroBuqueda) {
                case "cedula":
                    String[] datos = {this.txtIdentificaionCliente.getText()};
                     {

                        try {
                            rs = instCleinte.consultarCliente(datos, constantes.SP_CONSULTAR_CLIENTE_CI);
                            int i = 0;
                            if(rs!=null)
                            {
                                 rs.last();
                            modeloTabla.setNumRows(rs.getRow());
                            rs.beforeFirst();
                            while (rs.next()) {
                                modeloTabla.setValueAt(rs.getString("identificacion"), i, 0);
                                modeloTabla.setValueAt(rs.getString("nombre_cliente"), i, 1);
                                modeloTabla.setValueAt(rs.getString("apellido_cliente"), i, 2);
                                modeloTabla.setValueAt(rs.getString("telefonos"), i, 3);
                                modeloTabla.setValueAt(rs.getString("correo_cliente"), i, 4);
                                i++;
                            }
                            this.tblCleintes.setModel(modeloTabla);
                            JOptionPane.showMessageDialog(rootPane, "Consulta Exitosa");
                            }
                        } catch (ClassNotFoundException | SQLException | InternalError | InstantiationException | IllegalAccessException ex) {
                            System.out.println(ex);
                        }
                        
                    }
                    break;
                case "nombre":
                    String[] datosN = {this.txtNombreCliente.getText().trim()};
                     {

                        try {
                            rs = instCleinte.consultarCliente(datosN, constantes.SP_CONSULTAR_CLIENTE_NOMBRE);
                            int i = 0;
                            if(rs!=null)
                            {
                                 rs.last();
                            modeloTabla.setNumRows(rs.getRow());
                            rs.beforeFirst();
                            while (rs.next()) {
                                modeloTabla.setValueAt(rs.getString("identificacion"), i, 0);
                                modeloTabla.setValueAt(rs.getString("nombre_cliente"), i, 1);
                                modeloTabla.setValueAt(rs.getString("apellido_cliente"), i, 2);
                                modeloTabla.setValueAt(rs.getString("telefonos"), i, 3);
                                modeloTabla.setValueAt(rs.getString("correo_cliente"), i, 4);
                                i++;
                            }
                            this.tblCleintes.setModel(modeloTabla);
                            JOptionPane.showMessageDialog(rootPane, "Consulta Exitosa");
                            }
                        } catch (ClassNotFoundException | SQLException | InternalError | InstantiationException | IllegalAccessException ex) {
                            System.out.println(ex);
                        }
                        
                    }
                    break;
                case "apellido":
                    String[] datosA = {this.txtApellidoCliente1.getText().trim()};
                     {

                        try {
                            rs = instCleinte.consultarCliente(datosA, constantes.SP_CONSULTAR_CLIENTE_APELLIDO);
                            int i = 0;
                            if(rs!=null)
                            {
                                 rs.last();
                            modeloTabla.setNumRows(rs.getRow());
                            rs.beforeFirst();
                            while (rs.next()) {
                                modeloTabla.setValueAt(rs.getString("identificacion"), i, 0);
                                modeloTabla.setValueAt(rs.getString("nombre_cliente"), i, 1);
                                modeloTabla.setValueAt(rs.getString("apellido_cliente"), i, 2);
                                modeloTabla.setValueAt(rs.getString("telefonos"), i, 3);
                                modeloTabla.setValueAt(rs.getString("correo_cliente"), i, 4);
                                i++;
                            }
                            this.tblCleintes.setModel(modeloTabla);
                            JOptionPane.showMessageDialog(rootPane, "Consulta Exitosa");
                            }
                        } catch (ClassNotFoundException | SQLException | InternalError | InstantiationException | IllegalAccessException ex) {
                            System.out.println(ex);
                        }
                        
                    }
                    break;
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ingrese informacion para la consulta");
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     *
     */
    private String buscarParametro() {
        String parametroConsulta = "";
        if (!txtIdentificaionCliente.getText().trim().isEmpty()) {
            parametroConsulta = "cedula";
        } else if (!txtNombreCliente.getText().trim().isEmpty()) {
            parametroConsulta = "nombre";
        } else if (!txtApellidoCliente1.getText().trim().isEmpty()) {
            parametroConsulta = "apellido";
        }

        return parametroConsulta;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCleintes;
    private javax.swing.JTextField txtApellidoCliente1;
    private javax.swing.JTextField txtIdentificaionCliente;
    private javax.swing.JTextField txtNombreCliente;
    // End of variables declaration//GEN-END:variables
}
